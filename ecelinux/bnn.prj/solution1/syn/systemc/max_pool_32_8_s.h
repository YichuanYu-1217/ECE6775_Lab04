// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_32_8_s_HH_
#define _max_pool_32_8_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pool_32_8_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<1> > input_r_q0;
    sc_out< sc_lv<9> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<1> > output_r_d0;


    // Module declarations
    max_pool_32_8_s(sc_module_name name);
    SC_HAS_PROCESS(max_pool_32_8_s);

    ~max_pool_32_8_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > m_fu_154_p2;
    sc_signal< sc_lv<6> > m_reg_304;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > zext_ln90_fu_168_p1;
    sc_signal< sc_lv<9> > zext_ln90_reg_309;
    sc_signal< sc_lv<1> > icmp_ln89_fu_148_p2;
    sc_signal< sc_lv<3> > x_fu_178_p2;
    sc_signal< sc_lv<3> > x_reg_317;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > shl_ln95_fu_184_p2;
    sc_signal< sc_lv<3> > shl_ln95_reg_322;
    sc_signal< sc_lv<1> > icmp_ln90_fu_172_p2;
    sc_signal< sc_lv<11> > zext_ln91_fu_190_p1;
    sc_signal< sc_lv<11> > zext_ln91_reg_327;
    sc_signal< sc_lv<3> > y_fu_200_p2;
    sc_signal< sc_lv<3> > y_reg_335;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > shl_ln95_1_fu_206_p2;
    sc_signal< sc_lv<3> > shl_ln95_1_reg_340;
    sc_signal< sc_lv<1> > icmp_ln91_fu_194_p2;
    sc_signal< sc_lv<2> > c_fu_222_p2;
    sc_signal< sc_lv<2> > c_reg_348;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > add_ln95_fu_228_p2;
    sc_signal< sc_lv<3> > add_ln95_reg_353;
    sc_signal< sc_lv<1> > icmp_ln93_fu_216_p2;
    sc_signal< sc_lv<2> > r_fu_270_p2;
    sc_signal< sc_lv<2> > r_reg_361;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln94_fu_264_p2;
    sc_signal< sc_lv<1> > or_ln95_fu_295_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > m_0_reg_66;
    sc_signal< sc_lv<3> > x_0_reg_78;
    sc_signal< sc_lv<3> > y_0_reg_89;
    sc_signal< sc_lv<1> > max_0_reg_101;
    sc_signal< sc_lv<2> > c_0_reg_114;
    sc_signal< sc_lv<1> > max_1_reg_125;
    sc_signal< sc_lv<2> > r_0_reg_137;
    sc_signal< sc_lv<64> > zext_ln99_1_fu_255_p1;
    sc_signal< sc_lv<64> > zext_ln95_fu_290_p1;
    sc_signal< sc_lv<8> > tmp_fu_160_p3;
    sc_signal< sc_lv<3> > zext_ln93_fu_212_p1;
    sc_signal< sc_lv<9> > zext_ln99_fu_233_p1;
    sc_signal< sc_lv<9> > add_ln99_fu_237_p2;
    sc_signal< sc_lv<11> > tmp_10_cast_fu_242_p3;
    sc_signal< sc_lv<11> > add_ln99_1_fu_250_p2;
    sc_signal< sc_lv<3> > zext_ln94_fu_260_p1;
    sc_signal< sc_lv<3> > add_ln95_1_fu_276_p2;
    sc_signal< sc_lv<12> > tmp_s_fu_281_p4;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln95_1_fu_276_p2();
    void thread_add_ln95_fu_228_p2();
    void thread_add_ln99_1_fu_250_p2();
    void thread_add_ln99_fu_237_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_fu_222_p2();
    void thread_icmp_ln89_fu_148_p2();
    void thread_icmp_ln90_fu_172_p2();
    void thread_icmp_ln91_fu_194_p2();
    void thread_icmp_ln93_fu_216_p2();
    void thread_icmp_ln94_fu_264_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_m_fu_154_p2();
    void thread_or_ln95_fu_295_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_r_fu_270_p2();
    void thread_shl_ln95_1_fu_206_p2();
    void thread_shl_ln95_fu_184_p2();
    void thread_tmp_10_cast_fu_242_p3();
    void thread_tmp_fu_160_p3();
    void thread_tmp_s_fu_281_p4();
    void thread_x_fu_178_p2();
    void thread_y_fu_200_p2();
    void thread_zext_ln90_fu_168_p1();
    void thread_zext_ln91_fu_190_p1();
    void thread_zext_ln93_fu_212_p1();
    void thread_zext_ln94_fu_260_p1();
    void thread_zext_ln95_fu_290_p1();
    void thread_zext_ln99_1_fu_255_p1();
    void thread_zext_ln99_fu_233_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
