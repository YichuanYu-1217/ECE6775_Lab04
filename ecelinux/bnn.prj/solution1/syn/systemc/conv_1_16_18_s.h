// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_1_16_18_s_HH_
#define _conv_1_16_18_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_1_16_18_s_thbkb.h"
#include "conv_1_16_18_s_w_cud.h"

namespace ap_rtl {

struct conv_1_16_18_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > input_0_address0;
    sc_out< sc_logic > input_0_ce0;
    sc_in< sc_lv<1> > input_0_q0;
    sc_out< sc_lv<12> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<1> > output_r_d0;


    // Module declarations
    conv_1_16_18_s(sc_module_name name);
    SC_HAS_PROCESS(conv_1_16_18_s);

    ~conv_1_16_18_s();

    sc_trace_file* mVcdFile;

    conv_1_16_18_s_thbkb* threshold_conv1_V_U;
    conv_1_16_18_s_w_cud* w_conv1_0_U;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > threshold_conv1_V_address0;
    sc_signal< sc_logic > threshold_conv1_V_ce0;
    sc_signal< sc_lv<4> > threshold_conv1_V_q0;
    sc_signal< sc_lv<8> > w_conv1_0_address0;
    sc_signal< sc_logic > w_conv1_0_ce0;
    sc_signal< sc_lv<1> > w_conv1_0_q0;
    sc_signal< sc_lv<5> > n_fu_190_p2;
    sc_signal< sc_lv<5> > n_reg_462;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln61_fu_184_p2;
    sc_signal< sc_lv<9> > sext_ln68_fu_223_p1;
    sc_signal< sc_lv<9> > sext_ln68_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > zext_ln895_fu_235_p1;
    sc_signal< sc_lv<10> > zext_ln895_reg_477;
    sc_signal< sc_lv<16> > sext_ln62_fu_239_p1;
    sc_signal< sc_lv<16> > sext_ln62_reg_482;
    sc_signal< sc_lv<5> > x_fu_249_p2;
    sc_signal< sc_lv<5> > x_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<14> > zext_ln63_fu_255_p1;
    sc_signal< sc_lv<14> > zext_ln63_reg_495;
    sc_signal< sc_lv<1> > icmp_ln62_fu_243_p2;
    sc_signal< sc_lv<5> > y_fu_265_p2;
    sc_signal< sc_lv<5> > y_reg_503;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > c_fu_281_p2;
    sc_signal< sc_lv<2> > c_reg_511;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<10> > zext_ln68_14_fu_293_p1;
    sc_signal< sc_lv<10> > zext_ln68_14_reg_516;
    sc_signal< sc_lv<1> > icmp_ln65_fu_275_p2;
    sc_signal< sc_lv<9> > zext_ln66_2_fu_297_p1;
    sc_signal< sc_lv<9> > zext_ln66_2_reg_521;
    sc_signal< sc_lv<2> > r_fu_356_p2;
    sc_signal< sc_lv<2> > r_reg_529;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln66_fu_350_p2;
    sc_signal< sc_lv<9> > add_ln68_12_fu_429_p2;
    sc_signal< sc_lv<9> > add_ln68_12_reg_539;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > input_0_load_reg_549;
    sc_signal< sc_lv<16> > add_ln700_fu_453_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<5> > n_0_reg_102;
    sc_signal< sc_lv<5> > x_0_reg_114;
    sc_signal< sc_lv<1> > icmp_ln63_fu_259_p2;
    sc_signal< sc_lv<5> > y_0_reg_126;
    sc_signal< sc_lv<16> > p_014_0_reg_138;
    sc_signal< sc_lv<2> > c_0_reg_150;
    sc_signal< sc_lv<16> > p_014_1_reg_161;
    sc_signal< sc_lv<2> > r_0_reg_173;
    sc_signal< sc_lv<64> > zext_ln68_fu_196_p1;
    sc_signal< sc_lv<64> > zext_ln73_3_fu_341_p1;
    sc_signal< sc_lv<64> > zext_ln68_17_fu_403_p1;
    sc_signal< sc_lv<64> > zext_ln68_19_fu_434_p1;
    sc_signal< sc_lv<7> > tmp_fu_205_p3;
    sc_signal< sc_lv<8> > zext_ln68_13_fu_213_p1;
    sc_signal< sc_lv<8> > zext_ln68_12_fu_201_p1;
    sc_signal< sc_lv<8> > sub_ln68_fu_217_p2;
    sc_signal< sc_lv<9> > tmp_s_fu_227_p3;
    sc_signal< sc_lv<5> > zext_ln65_fu_271_p1;
    sc_signal< sc_lv<5> > add_ln68_fu_287_p2;
    sc_signal< sc_lv<16> > shl_ln1503_fu_301_p2;
    sc_signal< sc_lv<16> > accum_V_fu_307_p2;
    sc_signal< sc_lv<10> > zext_ln73_fu_319_p1;
    sc_signal< sc_lv<10> > add_ln73_fu_323_p2;
    sc_signal< sc_lv<14> > tmp_36_cast_fu_328_p3;
    sc_signal< sc_lv<14> > add_ln73_2_fu_336_p2;
    sc_signal< sc_lv<5> > zext_ln66_fu_346_p1;
    sc_signal< sc_lv<5> > add_ln68_2_fu_362_p2;
    sc_signal< sc_lv<9> > tmp_3_fu_368_p3;
    sc_signal< sc_lv<6> > tmp_4_fu_380_p3;
    sc_signal< sc_lv<10> > zext_ln68_15_fu_376_p1;
    sc_signal< sc_lv<10> > zext_ln68_16_fu_388_p1;
    sc_signal< sc_lv<10> > add_ln68_9_fu_392_p2;
    sc_signal< sc_lv<10> > add_ln68_10_fu_398_p2;
    sc_signal< sc_lv<9> > zext_ln68_18_fu_408_p1;
    sc_signal< sc_lv<9> > add_ln68_11_fu_412_p2;
    sc_signal< sc_lv<9> > shl_ln68_fu_417_p2;
    sc_signal< sc_lv<9> > sub_ln68_2_fu_423_p2;
    sc_signal< sc_lv<1> > xor_ln68_fu_438_p2;
    sc_signal< sc_lv<1> > xor_ln68_2_fu_444_p2;
    sc_signal< sc_lv<16> > zext_ln700_fu_449_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<16> ap_const_lv16_FFF7;
    static const sc_lv<9> ap_const_lv9_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_accum_V_fu_307_p2();
    void thread_add_ln68_10_fu_398_p2();
    void thread_add_ln68_11_fu_412_p2();
    void thread_add_ln68_12_fu_429_p2();
    void thread_add_ln68_2_fu_362_p2();
    void thread_add_ln68_9_fu_392_p2();
    void thread_add_ln68_fu_287_p2();
    void thread_add_ln700_fu_453_p2();
    void thread_add_ln73_2_fu_336_p2();
    void thread_add_ln73_fu_323_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_fu_281_p2();
    void thread_icmp_ln61_fu_184_p2();
    void thread_icmp_ln62_fu_243_p2();
    void thread_icmp_ln63_fu_259_p2();
    void thread_icmp_ln65_fu_275_p2();
    void thread_icmp_ln66_fu_350_p2();
    void thread_input_0_address0();
    void thread_input_0_ce0();
    void thread_n_fu_190_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_r_fu_356_p2();
    void thread_sext_ln62_fu_239_p1();
    void thread_sext_ln68_fu_223_p1();
    void thread_shl_ln1503_fu_301_p2();
    void thread_shl_ln68_fu_417_p2();
    void thread_sub_ln68_2_fu_423_p2();
    void thread_sub_ln68_fu_217_p2();
    void thread_threshold_conv1_V_address0();
    void thread_threshold_conv1_V_ce0();
    void thread_tmp_36_cast_fu_328_p3();
    void thread_tmp_3_fu_368_p3();
    void thread_tmp_4_fu_380_p3();
    void thread_tmp_fu_205_p3();
    void thread_tmp_s_fu_227_p3();
    void thread_w_conv1_0_address0();
    void thread_w_conv1_0_ce0();
    void thread_x_fu_249_p2();
    void thread_xor_ln68_2_fu_444_p2();
    void thread_xor_ln68_fu_438_p2();
    void thread_y_fu_265_p2();
    void thread_zext_ln63_fu_255_p1();
    void thread_zext_ln65_fu_271_p1();
    void thread_zext_ln66_2_fu_297_p1();
    void thread_zext_ln66_fu_346_p1();
    void thread_zext_ln68_12_fu_201_p1();
    void thread_zext_ln68_13_fu_213_p1();
    void thread_zext_ln68_14_fu_293_p1();
    void thread_zext_ln68_15_fu_376_p1();
    void thread_zext_ln68_16_fu_388_p1();
    void thread_zext_ln68_17_fu_403_p1();
    void thread_zext_ln68_18_fu_408_p1();
    void thread_zext_ln68_19_fu_434_p1();
    void thread_zext_ln68_fu_196_p1();
    void thread_zext_ln700_fu_449_p1();
    void thread_zext_ln73_3_fu_341_p1();
    void thread_zext_ln73_fu_319_p1();
    void thread_zext_ln895_fu_235_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
