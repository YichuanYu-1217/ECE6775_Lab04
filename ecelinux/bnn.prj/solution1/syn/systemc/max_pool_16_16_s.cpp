// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max_pool_16_16_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max_pool_16_16_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max_pool_16_16_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> max_pool_16_16_s::ap_ST_fsm_state1 = "1";
const sc_lv<7> max_pool_16_16_s::ap_ST_fsm_state2 = "10";
const sc_lv<7> max_pool_16_16_s::ap_ST_fsm_state3 = "100";
const sc_lv<7> max_pool_16_16_s::ap_ST_fsm_state4 = "1000";
const sc_lv<7> max_pool_16_16_s::ap_ST_fsm_state5 = "10000";
const sc_lv<7> max_pool_16_16_s::ap_ST_fsm_state6 = "100000";
const sc_lv<7> max_pool_16_16_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> max_pool_16_16_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> max_pool_16_16_s::ap_const_lv32_1 = "1";
const sc_lv<1> max_pool_16_16_s::ap_const_lv1_0 = "0";
const sc_lv<32> max_pool_16_16_s::ap_const_lv32_2 = "10";
const sc_lv<32> max_pool_16_16_s::ap_const_lv32_3 = "11";
const sc_lv<32> max_pool_16_16_s::ap_const_lv32_4 = "100";
const sc_lv<32> max_pool_16_16_s::ap_const_lv32_5 = "101";
const sc_lv<32> max_pool_16_16_s::ap_const_lv32_6 = "110";
const sc_lv<5> max_pool_16_16_s::ap_const_lv5_0 = "00000";
const sc_lv<1> max_pool_16_16_s::ap_const_lv1_1 = "1";
const sc_lv<4> max_pool_16_16_s::ap_const_lv4_0 = "0000";
const sc_lv<2> max_pool_16_16_s::ap_const_lv2_0 = "00";
const sc_lv<5> max_pool_16_16_s::ap_const_lv5_10 = "10000";
const sc_lv<5> max_pool_16_16_s::ap_const_lv5_1 = "1";
const sc_lv<3> max_pool_16_16_s::ap_const_lv3_0 = "000";
const sc_lv<4> max_pool_16_16_s::ap_const_lv4_8 = "1000";
const sc_lv<4> max_pool_16_16_s::ap_const_lv4_1 = "1";
const sc_lv<2> max_pool_16_16_s::ap_const_lv2_2 = "10";
const sc_lv<2> max_pool_16_16_s::ap_const_lv2_1 = "1";
const bool max_pool_16_16_s::ap_const_boolean_1 = true;

max_pool_16_16_s::max_pool_16_16_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln95_2_fu_278_p2);
    sensitive << ( shl_ln95_2_reg_342 );
    sensitive << ( zext_ln94_fu_262_p1 );

    SC_METHOD(thread_add_ln95_fu_230_p2);
    sensitive << ( shl_ln95_reg_324 );
    sensitive << ( zext_ln93_fu_214_p1 );

    SC_METHOD(thread_add_ln99_2_fu_252_p2);
    sensitive << ( zext_ln91_reg_329 );
    sensitive << ( tmp_15_cast_fu_244_p3 );

    SC_METHOD(thread_add_ln99_fu_239_p2);
    sensitive << ( zext_ln90_reg_311 );
    sensitive << ( zext_ln99_fu_235_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln89_fu_150_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln89_fu_150_p2 );

    SC_METHOD(thread_c_fu_224_p2);
    sensitive << ( c_0_reg_116 );

    SC_METHOD(thread_icmp_ln89_fu_150_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( m_0_reg_68 );

    SC_METHOD(thread_icmp_ln90_fu_174_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( x_0_reg_80 );

    SC_METHOD(thread_icmp_ln91_fu_196_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( y_0_reg_91 );

    SC_METHOD(thread_icmp_ln93_fu_218_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( c_0_reg_116 );

    SC_METHOD(thread_icmp_ln94_fu_266_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( r_0_reg_139 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln95_fu_292_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_m_fu_156_p2);
    sensitive << ( m_0_reg_68 );

    SC_METHOD(thread_or_ln95_fu_297_p2);
    sensitive << ( input_r_q0 );
    sensitive << ( max_1_reg_127 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln99_2_fu_257_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( max_0_reg_103 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln93_fu_218_p2 );

    SC_METHOD(thread_r_fu_272_p2);
    sensitive << ( r_0_reg_139 );

    SC_METHOD(thread_shl_ln95_2_fu_208_p2);
    sensitive << ( y_0_reg_91 );

    SC_METHOD(thread_shl_ln95_fu_186_p2);
    sensitive << ( x_0_reg_80 );

    SC_METHOD(thread_tmp_15_cast_fu_244_p3);
    sensitive << ( add_ln99_fu_239_p2 );

    SC_METHOD(thread_tmp_fu_162_p3);
    sensitive << ( m_0_reg_68 );

    SC_METHOD(thread_tmp_s_fu_283_p4);
    sensitive << ( add_ln95_reg_355 );
    sensitive << ( m_0_reg_68 );
    sensitive << ( add_ln95_2_fu_278_p2 );

    SC_METHOD(thread_x_fu_180_p2);
    sensitive << ( x_0_reg_80 );

    SC_METHOD(thread_y_fu_202_p2);
    sensitive << ( y_0_reg_91 );

    SC_METHOD(thread_zext_ln90_fu_170_p1);
    sensitive << ( tmp_fu_162_p3 );

    SC_METHOD(thread_zext_ln91_fu_192_p1);
    sensitive << ( x_0_reg_80 );

    SC_METHOD(thread_zext_ln93_fu_214_p1);
    sensitive << ( c_0_reg_116 );

    SC_METHOD(thread_zext_ln94_fu_262_p1);
    sensitive << ( r_0_reg_139 );

    SC_METHOD(thread_zext_ln95_fu_292_p1);
    sensitive << ( tmp_s_fu_283_p4 );

    SC_METHOD(thread_zext_ln99_2_fu_257_p1);
    sensitive << ( add_ln99_2_fu_252_p2 );

    SC_METHOD(thread_zext_ln99_fu_235_p1);
    sensitive << ( y_0_reg_91 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln89_fu_150_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln90_fu_174_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln91_fu_196_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln93_fu_218_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln94_fu_266_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_pool_16_16_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, m_fu_156_p2, "m_fu_156_p2");
    sc_trace(mVcdFile, m_reg_306, "m_reg_306");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln90_fu_170_p1, "zext_ln90_fu_170_p1");
    sc_trace(mVcdFile, zext_ln90_reg_311, "zext_ln90_reg_311");
    sc_trace(mVcdFile, icmp_ln89_fu_150_p2, "icmp_ln89_fu_150_p2");
    sc_trace(mVcdFile, x_fu_180_p2, "x_fu_180_p2");
    sc_trace(mVcdFile, x_reg_319, "x_reg_319");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, shl_ln95_fu_186_p2, "shl_ln95_fu_186_p2");
    sc_trace(mVcdFile, shl_ln95_reg_324, "shl_ln95_reg_324");
    sc_trace(mVcdFile, icmp_ln90_fu_174_p2, "icmp_ln90_fu_174_p2");
    sc_trace(mVcdFile, zext_ln91_fu_192_p1, "zext_ln91_fu_192_p1");
    sc_trace(mVcdFile, zext_ln91_reg_329, "zext_ln91_reg_329");
    sc_trace(mVcdFile, y_fu_202_p2, "y_fu_202_p2");
    sc_trace(mVcdFile, y_reg_337, "y_reg_337");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, shl_ln95_2_fu_208_p2, "shl_ln95_2_fu_208_p2");
    sc_trace(mVcdFile, shl_ln95_2_reg_342, "shl_ln95_2_reg_342");
    sc_trace(mVcdFile, icmp_ln91_fu_196_p2, "icmp_ln91_fu_196_p2");
    sc_trace(mVcdFile, c_fu_224_p2, "c_fu_224_p2");
    sc_trace(mVcdFile, c_reg_350, "c_reg_350");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln95_fu_230_p2, "add_ln95_fu_230_p2");
    sc_trace(mVcdFile, add_ln95_reg_355, "add_ln95_reg_355");
    sc_trace(mVcdFile, icmp_ln93_fu_218_p2, "icmp_ln93_fu_218_p2");
    sc_trace(mVcdFile, r_fu_272_p2, "r_fu_272_p2");
    sc_trace(mVcdFile, r_reg_363, "r_reg_363");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln94_fu_266_p2, "icmp_ln94_fu_266_p2");
    sc_trace(mVcdFile, or_ln95_fu_297_p2, "or_ln95_fu_297_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, m_0_reg_68, "m_0_reg_68");
    sc_trace(mVcdFile, x_0_reg_80, "x_0_reg_80");
    sc_trace(mVcdFile, y_0_reg_91, "y_0_reg_91");
    sc_trace(mVcdFile, max_0_reg_103, "max_0_reg_103");
    sc_trace(mVcdFile, c_0_reg_116, "c_0_reg_116");
    sc_trace(mVcdFile, max_1_reg_127, "max_1_reg_127");
    sc_trace(mVcdFile, r_0_reg_139, "r_0_reg_139");
    sc_trace(mVcdFile, zext_ln99_2_fu_257_p1, "zext_ln99_2_fu_257_p1");
    sc_trace(mVcdFile, zext_ln95_fu_292_p1, "zext_ln95_fu_292_p1");
    sc_trace(mVcdFile, tmp_fu_162_p3, "tmp_fu_162_p3");
    sc_trace(mVcdFile, zext_ln93_fu_214_p1, "zext_ln93_fu_214_p1");
    sc_trace(mVcdFile, zext_ln99_fu_235_p1, "zext_ln99_fu_235_p1");
    sc_trace(mVcdFile, add_ln99_fu_239_p2, "add_ln99_fu_239_p2");
    sc_trace(mVcdFile, tmp_15_cast_fu_244_p3, "tmp_15_cast_fu_244_p3");
    sc_trace(mVcdFile, add_ln99_2_fu_252_p2, "add_ln99_2_fu_252_p2");
    sc_trace(mVcdFile, zext_ln94_fu_262_p1, "zext_ln94_fu_262_p1");
    sc_trace(mVcdFile, add_ln95_2_fu_278_p2, "add_ln95_2_fu_278_p2");
    sc_trace(mVcdFile, tmp_s_fu_283_p4, "tmp_s_fu_283_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

max_pool_16_16_s::~max_pool_16_16_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void max_pool_16_16_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln94_fu_266_p2.read(), ap_const_lv1_1))) {
        c_0_reg_116 = c_reg_350.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln91_fu_196_p2.read()))) {
        c_0_reg_116 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln90_fu_174_p2.read(), ap_const_lv1_1))) {
        m_0_reg_68 = m_reg_306.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m_0_reg_68 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln94_fu_266_p2.read(), ap_const_lv1_1))) {
        max_0_reg_103 = max_1_reg_127.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln91_fu_196_p2.read()))) {
        max_0_reg_103 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_fu_218_p2.read()))) {
        max_1_reg_127 = max_0_reg_103.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        max_1_reg_127 = or_ln95_fu_297_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_fu_218_p2.read()))) {
        r_0_reg_139 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_0_reg_139 = r_reg_363.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln91_fu_196_p2.read(), ap_const_lv1_1))) {
        x_0_reg_80 = x_reg_319.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln89_fu_150_p2.read(), ap_const_lv1_0))) {
        x_0_reg_80 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln90_fu_174_p2.read()))) {
        y_0_reg_91 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln93_fu_218_p2.read(), ap_const_lv1_1))) {
        y_0_reg_91 = y_reg_337.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln93_fu_218_p2.read()))) {
        add_ln95_reg_355 = add_ln95_fu_230_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_reg_350 = c_fu_224_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        m_reg_306 = m_fu_156_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_reg_363 = r_fu_272_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln91_fu_196_p2.read()))) {
        shl_ln95_2_reg_342 = shl_ln95_2_fu_208_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln90_fu_174_p2.read()))) {
        shl_ln95_reg_324 = shl_ln95_fu_186_p2.read();
        zext_ln91_reg_329 = zext_ln91_fu_192_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_reg_319 = x_fu_180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_reg_337 = y_fu_202_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln89_fu_150_p2.read(), ap_const_lv1_0))) {
        zext_ln90_reg_311 = zext_ln90_fu_170_p1.read();
    }
}

void max_pool_16_16_s::thread_add_ln95_2_fu_278_p2() {
    add_ln95_2_fu_278_p2 = (!shl_ln95_2_reg_342.read().is_01() || !zext_ln94_fu_262_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(shl_ln95_2_reg_342.read()) + sc_biguint<4>(zext_ln94_fu_262_p1.read()));
}

void max_pool_16_16_s::thread_add_ln95_fu_230_p2() {
    add_ln95_fu_230_p2 = (!shl_ln95_reg_324.read().is_01() || !zext_ln93_fu_214_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(shl_ln95_reg_324.read()) + sc_biguint<4>(zext_ln93_fu_214_p1.read()));
}

void max_pool_16_16_s::thread_add_ln99_2_fu_252_p2() {
    add_ln99_2_fu_252_p2 = (!zext_ln91_reg_329.read().is_01() || !tmp_15_cast_fu_244_p3.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln91_reg_329.read()) + sc_biguint<12>(tmp_15_cast_fu_244_p3.read()));
}

void max_pool_16_16_s::thread_add_ln99_fu_239_p2() {
    add_ln99_fu_239_p2 = (!zext_ln99_fu_235_p1.read().is_01() || !zext_ln90_reg_311.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln99_fu_235_p1.read()) + sc_biguint<9>(zext_ln90_reg_311.read()));
}

void max_pool_16_16_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max_pool_16_16_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max_pool_16_16_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void max_pool_16_16_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void max_pool_16_16_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void max_pool_16_16_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void max_pool_16_16_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void max_pool_16_16_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln89_fu_150_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void max_pool_16_16_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max_pool_16_16_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_fu_150_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void max_pool_16_16_s::thread_c_fu_224_p2() {
    c_fu_224_p2 = (!c_0_reg_116.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(c_0_reg_116.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void max_pool_16_16_s::thread_icmp_ln89_fu_150_p2() {
    icmp_ln89_fu_150_p2 = (!m_0_reg_68.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_68.read() == ap_const_lv5_10);
}

void max_pool_16_16_s::thread_icmp_ln90_fu_174_p2() {
    icmp_ln90_fu_174_p2 = (!x_0_reg_80.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_80.read() == ap_const_lv4_8);
}

void max_pool_16_16_s::thread_icmp_ln91_fu_196_p2() {
    icmp_ln91_fu_196_p2 = (!y_0_reg_91.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_91.read() == ap_const_lv4_8);
}

void max_pool_16_16_s::thread_icmp_ln93_fu_218_p2() {
    icmp_ln93_fu_218_p2 = (!c_0_reg_116.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_116.read() == ap_const_lv2_2);
}

void max_pool_16_16_s::thread_icmp_ln94_fu_266_p2() {
    icmp_ln94_fu_266_p2 = (!r_0_reg_139.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_139.read() == ap_const_lv2_2);
}

void max_pool_16_16_s::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<12>) (zext_ln95_fu_292_p1.read());
}

void max_pool_16_16_s::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void max_pool_16_16_s::thread_m_fu_156_p2() {
    m_fu_156_p2 = (!m_0_reg_68.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(m_0_reg_68.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void max_pool_16_16_s::thread_or_ln95_fu_297_p2() {
    or_ln95_fu_297_p2 = (input_r_q0.read() | max_1_reg_127.read());
}

void max_pool_16_16_s::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<10>) (zext_ln99_2_fu_257_p1.read());
}

void max_pool_16_16_s::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void max_pool_16_16_s::thread_output_r_d0() {
    output_r_d0 = max_0_reg_103.read();
}

void max_pool_16_16_s::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln93_fu_218_p2.read(), ap_const_lv1_1))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void max_pool_16_16_s::thread_r_fu_272_p2() {
    r_fu_272_p2 = (!r_0_reg_139.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(r_0_reg_139.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void max_pool_16_16_s::thread_shl_ln95_2_fu_208_p2() {
    shl_ln95_2_fu_208_p2 = (!ap_const_lv4_1.is_01())? sc_lv<4>(): y_0_reg_91.read() << (unsigned short)ap_const_lv4_1.to_uint();
}

void max_pool_16_16_s::thread_shl_ln95_fu_186_p2() {
    shl_ln95_fu_186_p2 = (!ap_const_lv4_1.is_01())? sc_lv<4>(): x_0_reg_80.read() << (unsigned short)ap_const_lv4_1.to_uint();
}

void max_pool_16_16_s::thread_tmp_15_cast_fu_244_p3() {
    tmp_15_cast_fu_244_p3 = esl_concat<9,3>(add_ln99_fu_239_p2.read(), ap_const_lv3_0);
}

void max_pool_16_16_s::thread_tmp_fu_162_p3() {
    tmp_fu_162_p3 = esl_concat<5,3>(m_0_reg_68.read(), ap_const_lv3_0);
}

void max_pool_16_16_s::thread_tmp_s_fu_283_p4() {
    tmp_s_fu_283_p4 = esl_concat<9,4>(esl_concat<5,4>(m_0_reg_68.read(), add_ln95_2_fu_278_p2.read()), add_ln95_reg_355.read());
}

void max_pool_16_16_s::thread_x_fu_180_p2() {
    x_fu_180_p2 = (!x_0_reg_80.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_0_reg_80.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pool_16_16_s::thread_y_fu_202_p2() {
    y_fu_202_p2 = (!y_0_reg_91.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(y_0_reg_91.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pool_16_16_s::thread_zext_ln90_fu_170_p1() {
    zext_ln90_fu_170_p1 = esl_zext<9,8>(tmp_fu_162_p3.read());
}

void max_pool_16_16_s::thread_zext_ln91_fu_192_p1() {
    zext_ln91_fu_192_p1 = esl_zext<12,4>(x_0_reg_80.read());
}

void max_pool_16_16_s::thread_zext_ln93_fu_214_p1() {
    zext_ln93_fu_214_p1 = esl_zext<4,2>(c_0_reg_116.read());
}

void max_pool_16_16_s::thread_zext_ln94_fu_262_p1() {
    zext_ln94_fu_262_p1 = esl_zext<4,2>(r_0_reg_139.read());
}

void max_pool_16_16_s::thread_zext_ln95_fu_292_p1() {
    zext_ln95_fu_292_p1 = esl_zext<64,13>(tmp_s_fu_283_p4.read());
}

void max_pool_16_16_s::thread_zext_ln99_2_fu_257_p1() {
    zext_ln99_2_fu_257_p1 = esl_zext<64,12>(add_ln99_2_fu_252_p2.read());
}

void max_pool_16_16_s::thread_zext_ln99_fu_235_p1() {
    zext_ln99_fu_235_p1 = esl_zext<9,4>(y_0_reg_91.read());
}

void max_pool_16_16_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln89_fu_150_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln90_fu_174_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln91_fu_196_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln93_fu_218_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln94_fu_266_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

