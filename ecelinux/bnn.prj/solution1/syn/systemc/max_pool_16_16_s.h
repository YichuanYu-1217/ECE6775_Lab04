// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_16_16_s_HH_
#define _max_pool_16_16_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pool_16_16_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<1> > input_r_q0;
    sc_out< sc_lv<10> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<1> > output_r_d0;


    // Module declarations
    max_pool_16_16_s(sc_module_name name);
    SC_HAS_PROCESS(max_pool_16_16_s);

    ~max_pool_16_16_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > m_fu_156_p2;
    sc_signal< sc_lv<5> > m_reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > zext_ln90_fu_170_p1;
    sc_signal< sc_lv<9> > zext_ln90_reg_311;
    sc_signal< sc_lv<1> > icmp_ln89_fu_150_p2;
    sc_signal< sc_lv<4> > x_fu_180_p2;
    sc_signal< sc_lv<4> > x_reg_319;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > shl_ln95_fu_186_p2;
    sc_signal< sc_lv<4> > shl_ln95_reg_324;
    sc_signal< sc_lv<1> > icmp_ln90_fu_174_p2;
    sc_signal< sc_lv<12> > zext_ln91_fu_192_p1;
    sc_signal< sc_lv<12> > zext_ln91_reg_329;
    sc_signal< sc_lv<4> > y_fu_202_p2;
    sc_signal< sc_lv<4> > y_reg_337;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > shl_ln95_2_fu_208_p2;
    sc_signal< sc_lv<4> > shl_ln95_2_reg_342;
    sc_signal< sc_lv<1> > icmp_ln91_fu_196_p2;
    sc_signal< sc_lv<2> > c_fu_224_p2;
    sc_signal< sc_lv<2> > c_reg_350;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > add_ln95_fu_230_p2;
    sc_signal< sc_lv<4> > add_ln95_reg_355;
    sc_signal< sc_lv<1> > icmp_ln93_fu_218_p2;
    sc_signal< sc_lv<2> > r_fu_272_p2;
    sc_signal< sc_lv<2> > r_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln94_fu_266_p2;
    sc_signal< sc_lv<1> > or_ln95_fu_297_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > m_0_reg_68;
    sc_signal< sc_lv<4> > x_0_reg_80;
    sc_signal< sc_lv<4> > y_0_reg_91;
    sc_signal< sc_lv<1> > max_0_reg_103;
    sc_signal< sc_lv<2> > c_0_reg_116;
    sc_signal< sc_lv<1> > max_1_reg_127;
    sc_signal< sc_lv<2> > r_0_reg_139;
    sc_signal< sc_lv<64> > zext_ln99_2_fu_257_p1;
    sc_signal< sc_lv<64> > zext_ln95_fu_292_p1;
    sc_signal< sc_lv<8> > tmp_fu_162_p3;
    sc_signal< sc_lv<4> > zext_ln93_fu_214_p1;
    sc_signal< sc_lv<9> > zext_ln99_fu_235_p1;
    sc_signal< sc_lv<9> > add_ln99_fu_239_p2;
    sc_signal< sc_lv<12> > tmp_15_cast_fu_244_p3;
    sc_signal< sc_lv<12> > add_ln99_2_fu_252_p2;
    sc_signal< sc_lv<4> > zext_ln94_fu_262_p1;
    sc_signal< sc_lv<4> > add_ln95_2_fu_278_p2;
    sc_signal< sc_lv<13> > tmp_s_fu_283_p4;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln95_2_fu_278_p2();
    void thread_add_ln95_fu_230_p2();
    void thread_add_ln99_2_fu_252_p2();
    void thread_add_ln99_fu_239_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_fu_224_p2();
    void thread_icmp_ln89_fu_150_p2();
    void thread_icmp_ln90_fu_174_p2();
    void thread_icmp_ln91_fu_196_p2();
    void thread_icmp_ln93_fu_218_p2();
    void thread_icmp_ln94_fu_266_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_m_fu_156_p2();
    void thread_or_ln95_fu_297_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_r_fu_272_p2();
    void thread_shl_ln95_2_fu_208_p2();
    void thread_shl_ln95_fu_186_p2();
    void thread_tmp_15_cast_fu_244_p3();
    void thread_tmp_fu_162_p3();
    void thread_tmp_s_fu_283_p4();
    void thread_x_fu_180_p2();
    void thread_y_fu_202_p2();
    void thread_zext_ln90_fu_170_p1();
    void thread_zext_ln91_fu_192_p1();
    void thread_zext_ln93_fu_214_p1();
    void thread_zext_ln94_fu_262_p1();
    void thread_zext_ln95_fu_292_p1();
    void thread_zext_ln99_2_fu_257_p1();
    void thread_zext_ln99_fu_235_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
